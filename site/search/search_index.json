{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Setting Install kubectl curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.7/2022-06-29/bin/linux/amd64/kubectl chmod +x ./kubectl mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin Install eksctl curl --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp sudo mv /tmp/eksctl /usr/local/bin Configuration eksctl first config aws credential. cluster ownerd credential eksctl&kubectl connecting to EKS Cluster aws eks update-kubeconfig --name $(eks-cluster-name) --region $(cluster-region)","title":"Setting"},{"location":"#setting","text":"","title":"Setting"},{"location":"#install-kubectl","text":"curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.7/2022-06-29/bin/linux/amd64/kubectl chmod +x ./kubectl mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin","title":"Install kubectl"},{"location":"#install-eksctl","text":"curl --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp sudo mv /tmp/eksctl /usr/local/bin","title":"Install eksctl"},{"location":"#configuration-eksctl","text":"first config aws credential. cluster ownerd credential eksctl&kubectl connecting to EKS Cluster aws eks update-kubeconfig --name $(eks-cluster-name) --region $(cluster-region)","title":"Configuration eksctl"},{"location":"kubectl/","text":"Kubectl is a command-line tool for communicating with the Kubernates cluster The following is the command of kubectl. get Kubectl get $(resource) shows information about Kubernetes resources Below are the options for kubectl -o $(command) wide : show more info json : show format json kubectl get [(-o|--output=)json|yaml|name|go-template|go-template-file| template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file| custom-columns|custom-columns-file|wide] (TYPE[.VERSION][.GROUP] [NAME | -l label] | TYPE[.VERSION][.GROUP]/NAME ...) [flags] run kubectl run","title":"Kubectl"},{"location":"kubectl/#get","text":"Kubectl get $(resource) shows information about Kubernetes resources Below are the options for kubectl -o $(command) wide : show more info json : show format json kubectl get [(-o|--output=)json|yaml|name|go-template|go-template-file| template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file| custom-columns|custom-columns-file|wide] (TYPE[.VERSION][.GROUP] [NAME | -l label] | TYPE[.VERSION][.GROUP]/NAME ...) [flags]","title":"get"},{"location":"kubectl/#run","text":"kubectl run","title":"run"},{"location":"AWS%20Load%20Balancer%20Controller/","text":"Introduce The AWS load balancer can be used as a k8s ingress & service via the ALB controller. Service Component is convert to NLB(Network Load Balancer) Ingress component is convert to ALB(Application Load Balancer) ALB Controller is convert annotations to AWS Resource. like this ingress.yaml apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: \"ingress-example\" namespace: default annotations: kubernetes.io/ingress.class: alb alb.ingress.kubernetes.io/scheme: internet-facing alb.ingress.kubernetes.io/target-type: ip spec: rules: - http: paths: - path: /$(access_path) pathType: Prefix backend: service: name: $(Service_Name) port: number: $(Service_Port)","title":"Introduce"},{"location":"AWS%20Load%20Balancer%20Controller/#introduce","text":"The AWS load balancer can be used as a k8s ingress & service via the ALB controller. Service Component is convert to NLB(Network Load Balancer) Ingress component is convert to ALB(Application Load Balancer) ALB Controller is convert annotations to AWS Resource. like this ingress.yaml apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: \"ingress-example\" namespace: default annotations: kubernetes.io/ingress.class: alb alb.ingress.kubernetes.io/scheme: internet-facing alb.ingress.kubernetes.io/target-type: ip spec: rules: - http: paths: - path: /$(access_path) pathType: Prefix backend: service: name: $(Service_Name) port: number: $(Service_Port)","title":"Introduce"},{"location":"AWS%20Load%20Balancer%20Controller/Annotations/","text":"","title":"Annotations"},{"location":"AWS%20Load%20Balancer%20Controller/Installation%20ALB%20Controller/","text":"Installation ALB Controller Create IAM Policy curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.3/docs/install/iam_policy.json Create IAM Role eksctl create iamserviceaccount \\ --cluster=$(cluster-name) \\ --namespace=kube-system \\ --name=aws-load-balancer-controller \\ --role-name \"AmazonEKSLoadBalancerControllerRole\" \\ --attach-policy-arn=arn:aws:iam::$(iam-num):policy/AWSLoadBalancerControllerIAMPolicy \\ --approve install to helm chart Find your region IAM num : AWS container image registry and insert to 602401143452 (default region ap-northeast-2) helm repo add eks https://aws.github.io/eks-charts helm repo update helm install aws-load-balancer-controller eks/aws-load-balancer-controller \\ -n kube-system \\ --set clusterName=my-cluster \\ --set serviceAccount.create=false \\ --set serviceAccount.name=aws-load-balancer-controller --set image.repository=602401143452.dkr.ecr.region-code.amazonaws.com/amazon/aws-load-balancer-controller check that the controller is installed kubectl get deployment -n kube-system aws-load-balancer-controller install to manifest deploy cert-manager kubectl apply \\ --validate=false \\ -f https://github.com/jetstack/cert-manager/releases/download/v1.5.4/cert-manager.yaml install the controller curl -Lo v2_4_3_full.yaml https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.4.3/v2_4_3_full.yaml kubectl apply -f v2_4_3_full.yaml curl -Lo v2_4_3_ingclass.yaml https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.4.3/v2_4_3_ingclass.yaml kubectl apply -f v2_4_3_ingclass.yaml check that the controller is installed kubectl get deployment -n kube-system aws-load-balancer-controller","title":"Installation ALB Controller"},{"location":"AWS%20Load%20Balancer%20Controller/Installation%20ALB%20Controller/#installation-alb-controller","text":"","title":"Installation ALB Controller"},{"location":"AWS%20Load%20Balancer%20Controller/Installation%20ALB%20Controller/#create-iam-policy","text":"curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.3/docs/install/iam_policy.json","title":"Create IAM Policy"},{"location":"AWS%20Load%20Balancer%20Controller/Installation%20ALB%20Controller/#create-iam-role","text":"eksctl create iamserviceaccount \\ --cluster=$(cluster-name) \\ --namespace=kube-system \\ --name=aws-load-balancer-controller \\ --role-name \"AmazonEKSLoadBalancerControllerRole\" \\ --attach-policy-arn=arn:aws:iam::$(iam-num):policy/AWSLoadBalancerControllerIAMPolicy \\ --approve","title":"Create IAM Role"},{"location":"AWS%20Load%20Balancer%20Controller/Installation%20ALB%20Controller/#install-to-helm-chart","text":"Find your region IAM num : AWS container image registry and insert to 602401143452 (default region ap-northeast-2) helm repo add eks https://aws.github.io/eks-charts helm repo update helm install aws-load-balancer-controller eks/aws-load-balancer-controller \\ -n kube-system \\ --set clusterName=my-cluster \\ --set serviceAccount.create=false \\ --set serviceAccount.name=aws-load-balancer-controller --set image.repository=602401143452.dkr.ecr.region-code.amazonaws.com/amazon/aws-load-balancer-controller check that the controller is installed kubectl get deployment -n kube-system aws-load-balancer-controller","title":"install to helm chart"},{"location":"AWS%20Load%20Balancer%20Controller/Installation%20ALB%20Controller/#install-to-manifest","text":"deploy cert-manager kubectl apply \\ --validate=false \\ -f https://github.com/jetstack/cert-manager/releases/download/v1.5.4/cert-manager.yaml install the controller curl -Lo v2_4_3_full.yaml https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.4.3/v2_4_3_full.yaml kubectl apply -f v2_4_3_full.yaml curl -Lo v2_4_3_ingclass.yaml https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.4.3/v2_4_3_ingclass.yaml kubectl apply -f v2_4_3_ingclass.yaml check that the controller is installed kubectl get deployment -n kube-system aws-load-balancer-controller","title":"install to manifest"},{"location":"AWS%20Load%20Balancer%20Controller/example/","text":"ALB Controller example used NginX Application Load Balancer used Ingress Network load Balancer used Service","title":"Example"},{"location":"AWS%20Load%20Balancer%20Controller/example/#alb-controller-example-used-nginx","text":"Application Load Balancer used Ingress Network load Balancer used Service","title":"ALB Controller example used NginX"}]}